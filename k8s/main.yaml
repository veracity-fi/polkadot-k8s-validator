apiVersion: v1
kind: Service
metadata:
  name: private-node
  labels:
    app: private-node
spec:
  ports:
  - port: 9933
    name: rpc
  - port: 9615
    name: metrics
  - port: 30333
    name: p2p
  selector:
    app: private-node
  clusterIP: None

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: private-node
spec:
  selector:
    matchLabels:
      app: private-node
  serviceName: private-node
  replicas: 1
  template:
    metadata:
      labels:
        app: private-node
    spec:
      securityContext:
        fsGroup: 1000
      containers:
      - name: private-node
        image: veracityfi/polkadot
        imagePullPolicy: Always
        ports:
        - containerPort: 9933
          name: dot-rpc-port
        - containerPort: 9615
          name: metrics
        - containerPort: 30333
          name: dot-p2p-port
        volumeMounts:
        - name: polkadot-private-node-pv-claim
          mountPath: /polkadot
        envFrom:
        - configMapRef:
            name: polkadot-configmap
        resources:
          limits:
            cpu: "0"
#      volumes:
#      - name: polkadot-node-keys
#        secret:
#          secretName: polkadot-node-keys
      initContainers:
      - name: polkadot-archive-downloader
        image: veracityfi/polkadot-archive-downloader
        volumeMounts:
        - name: polkadot-private-node-pv-claim
          mountPath: /polkadot
        env:
        - name: CHAIN
          valueFrom:
            configMapKeyRef:
              name: polkadot-configmap
              key: CHAIN
        - name: ARCHIVE_URL
          valueFrom:
            configMapKeyRef:
              name: polkadot-configmap
              key: ARCHIVE_URL
        imagePullPolicy: Always
  volumeClaimTemplates:
  - metadata:
      name: polkadot-private-node-pv-claim
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 20Gi
